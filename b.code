f = [dataA, objsA] → [dataB, objsB]
#dataA ≠ 0  ⇒  obj = dataA deel [ 1, 1 + dataA₀ ]
objsB = (obj ⇒ objsA || [ obj ]) | (¬obj ⇒ objsA)
dataB = dataA vanaf (1 + dataA₀)

decodeer = i → ((f^9) [i, []])₁
encodeer = bers → cat(bers map (b → [#b] || b))

berichten = ["hoi", "hoe", "is", "het", "ruben"]
uit = ((encodeer ∘ decodeer) berichten) cat ", "
