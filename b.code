bdec = x → ((herhaal bdecEen)[x,[]])₀

bdecEen = [dataA,stapelA] → [dataB, stapelB]
	d = 'l'  ⇒  d :: dataB = dataA
	d = 'l'  ⇒  stapelB = 0 :: stapelA
	d = 'e'  ⇒  stapelA = 0 :: stapelB

uit = bdec "le"

;uit = bdec "llei3ei4ee"
;-
bdecR = data → [waarde,subdata]
	d :: rest = data
	d = 'i' ⇒  [waarde,subdata] = bint(rest)
	d = 'l' ⇒  [waarde,subdata] = knaaglijst [rest,rest]
	d = 'd' ⇒  waarde = 3

bint = rest → [waardeI,dataI]
	eind = rest vind 'i'
	waardeI = int(rest tot eind)
	dataI = rest vanaf (eind + 1)

bdec = x → bdecR(x)₀

; lijst
knaaglijst = [waardeA,dataA] → [waardeB,dataB]
	[obj,dataB] = bdecR' dataA
	waardeB = obj :: knaaglijst' dataB

uit = bdec "llei3ei4ee"
-;
