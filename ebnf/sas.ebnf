sas: '\n'? exp ('\n' exp)*
block: INDENT ('\n' indent exp)+ DEDENT
exp: if | function | block
function: infix | uatom

blockfix: INDENT ('\n' indent blockop exp)+ DEDENT
infix: (uatom binop)+ (uatom | block)
uatom: ubin | upre | atom
ubin: atom atom atom
upre: atom atom

atom:
	| brackets | prefix | identifier | number | text
	| list | set
	| blockfix

list: '[' collection ']'
set: '{' collection '}'
params: '(' collection ')'

collection: INDENT exp? (sep exp)* DEDENT '\n'?
sep: ('\n' indent) | ','

brackets: '(' (block|exp) '\n'? ')'
prefix: unop atom
identifier: SAS-ID
number: NUMBER
text: STRING

unop: '#' | '_' | '^' | '!' | '-' | '+-'
blockop: '+' | '*' | '|' | '&' | '@'
binop:
	| '.'
	| '^' | '_'
	| '*' | '/' | '%'
	| '+' | '-' | '+-'
	| '..'
	| '>' | '<' | '>=' | '<=' | '=' | '!='
	| 'in' | 'as' | ':' | 'is'
	| '|' | '\\' | '&' | 'xor' | 'nor' | 'and' | 'or'
	| '>>' | '<<' | '@' | '->' 
	| '=>' | '<=>'

; IF
; inline if bestaat ff niet

newline: '\n'
if: ruleif | blockif
ruleif:
	'if' block newline
	'then' block
	(newline 'else' INDENT block DEDENT)?
; moet hier end bij?

blockif:
	'if' exp block
	(newline 'elseif' exp block)*
	(newline 'else' block)?

inlineif:
	'if' exp 'then' exp 'else' exp 'end'?
