; BASIS
a = 3
⋀(=(a 3))

app = uit
succ = succa → succa + 1
looptijd = 0
⋀(=(app uit) =(succ →(succa +(succa 1))) =(looptijd 0))

a = 3
b = 2
⋀(=(a 3) =(b 2))

a =;-commentaar -;3
⋀(=(a 3))

; ARITH
a = 2 + 3
⋀(=(a +(2 3)))

a = 2 - 3 · 7 + 4
⋀(=(a +(-(2 ·(3 7)) 4)))

a = - (1 / 0)
⋀(=(a -(/(1 0))))

a = b² + 2
⋀(=(a +(^(b 2) 2)))

a = sin 3 + 8
⋀(=(a +(sin(3) 8)))

; FUNC
f = x → y
⋀(=(f →(x y)))

f = x → x / 2
⋀(=(f →(x /(x 2))))

f = a,b,c → x,y,z
⋀(=(f →(,(,(a b) c) ,(,(x y) z))))

f = x → x + 1
g = a,b → c+1,2
⋀(=(f →(x +(x 1))) =(g →(,(a b) ,(+(c 1) 2))))

f = g ∘ h⁻¹
⋀(=(f ∘(g ^(h -1))))

; ALS - DAN
als a dan b eind
⋀(⇒(a b))

als a dan b anders c eind
⋀(⇒(a b c))

als a dan
	b
eind
⋀(⇒(a ⋀(b)))

als a dan
	b
anders
	c
eind
⋀(⇒(a ⋀(b) ⋀(c)))

als a dan
	b
andersals c dan
	d
eind
⋀(⇒(a ⋀(b) c ⋀(d)))

als a dan
	b
andersals c dan
	d
anders
	e
eind
⋀(⇒(a ⋀(b) c ⋀(d) ⋀(e)))

als a dan
	b
andersals c dan
	d
andersals e dan
	f
anders
	g
eind
⋀(⇒(a ⋀(b) c ⋀(d) e ⋀(f) ⋀(g)))

als ja dan 1 anders 0
⋀(=>(ja 1 0))

als ja dan
a = 2
eind
⋀(=>(ja EN(=(a 2))))

als ja dan
a = 2
anders
a = 3
eind
⋀(=>(ja EN(=(a 2)) EN(=(a 3))))

b = (1 < 2 < 3)
⋀(=(b en(<(1 2) <(2 3))))

, 0},

; idk
a = \
", 

wit.
⋀(.(wit))

a = [
]
⋀(=(a []()))

a = [
	b
]
⋀(=(a [](b)))

a = [
	b
	c
]
⋀(=(a [](b c)))


sin(a) * b
⋀((* (sin a) b))


; functies!
sin a
⋀((sin a))

sin[tau]
⋀((sin tau))

sin[3*4]
⋀((sin (* 3 4)))

sin(a) * b
⋀((* (sin a) b))

sin(a,b)
⋀((sin (, a b)))

sin a * 3
⋀((* (sin a) 3))


; unaire opn
-a
⋀((- a))

a * -b
⋀((* a (- b)))

a + - -b
⋀((+ a (- (- b))))

a * (-b)
⋀((* a (- b)))

((-b))
⋀((- b))

-a - b
⋀((- (- a) b))

a - -b
⋀((- a (- b)))

-a - b
⋀((- (- a) b))

- #a
⋀((- (# a)))


; zelfde level
a + b
⋀((+ a b))

a + b + c
⋀((+ (+ a b) c))

a + b - c
⋀((- (+ a b) c))

a + b + c - d - e - f
⋀((- (- (- (+ (+ a b) c) d) e) f))


;	moeilijker
a + b*3^i
⋀((+ a (* b (^ 3 i))))

a + b^i
⋀((+ a (^ b i)))

a^2 + b^2 + c^2 + d^2
⋀((+ (+ (+ (^ a 2) (^ b 2)) (^ c 2)) (^ d 2)))

a * b ^ c + d
⋀((+ (* a (^ b c)) d))

a*b+c^d/e^f
⋀((+ (* a b) (/ (^ c d) (^ e f))))

a+b^c/d
⋀((+ a (/ (^ b c) d)))

a*b+c^d/e^f - 8
⋀((- (+ (* a b) (/ (^ c d) (^ e f))) 8))

a=b+c
⋀((= a (+ b c)))

((a + b))
⋀((+ a b))

(((a + b)))
⋀((+ a b))


a + b * c
⋀((+ a (* b c)))

a * b + c
⋀((+ (* a b) c))

(a + b) * c
⋀((* (+ a b) c))


a+b*c
⋀((+ a (* b c)))

(a+b)*c
⋀((* (+ a b) c))

(a + b) * c
⋀((* (+ a b) c))

(a + b) * c / (d - e)
⋀((/ (* (+ a b) c) (- d e)))

((((a))))
⋀(a)

a
⋀(a)


; regels
a = 1
b = 2
⋀((
 (= a 1) (= b 2)))


a = 1


b = 2


⋀((
 (= a 1) (= b 2)))


a = 1


b = 2

c=3

⋀((
 (
 (= a 1) (= b 2)) (= c 3)))


a =
	3
⋀(=(a co(3)))

a =
	0 → 1
	1 → 2
⋀(=(a co(→(0 1) →(1 2))))

a =
	3
b = 1
⋀(EN(=(a co(3)) =(b 1)))

a =
	3

b = 1
⋀(EN(=(a co(3)) =(b 1)))


; zieke blokken h3l
priem als #delers = 2
⋀(=>(=(#(delers) 2) priem))

p: priem als
	a
⋀(=>(a :(p priem)))

als a dan b eind
⋀(⇒(a b))

als a dan
	b
eind
⋀(⇒(a ⋀(b)))

als
	a
dan
	b
eind
⋀(⇒(⋀(a) ⋀(b)))

als
	a
	b
dan
	c
	d
eind
⋀(⇒(⋀(a b) ⋀(c d)))

als a dan
	b = 10
anders
	b = 20
eind
⋀(⇒(a =(b 10)) =(b 20))

als a 
	b
eind
⋀(⇒(a b))


a = (+)
⋀(=(a +))

a = (·)
⋀(=(a ·))

a = 3 (-) 2
⋀(=(a -(3 2)))

a = (#) (-) (^)
⋀(=(a -(# ^)))


; regels
a = 1
b = 2
⋀(=(a 1) =(b 2))

a
b
c
⋀(a b c)


; trivia
a = 1
⋀(=(a 1))

a = b + 1
⋀(=(a +(b 1)))

b = f(a)
⋀(=(b f(a)))

b = f a
⋀(=(b f(a)))

a = (p => b)
⋀(=(a =>(p b)))

a : getal
⋀(:(a getal))

a = (b > c)
⋀(=(a >(b c)))

a = (b of c)
⋀(=(a of(b c)))

(a > 0) => b := 3
⋀(=>(>(a 0) :=(b 3)))

a = 1 + #b
⋀(=(a +(1 #(b))))

a = 3
b b b
c = 0
⋀(/\\(=(a 3) b(b b) =(c 0)))


		// funcs
f = a → a
⋀(=(f →(a a)))

f = a → a + 1
⋀(=(f →(a +(a 1))))

f = a,b → c
⋀(=(f →(,(a b) c)))

f = int,int → int
⋀(=(f (→ (, int int) int)))

f = intd,intd → intq
⋀(=(f →(,(intd intd) intq)))

f = int^2,int^2 → int
⋀(=(f →(,(^(int 2) ^(int 2)) int)))

a = {
	0 → 1
	beeld dt → a(net) + dt
}
((= a ({} (→ 0 1) (→ (beeld dt) (+ (a net) dt))))
a = (3 =)
=(a fout)

a = 3
b b b b
c = 0
⋀((= a 3) fout (= c 0))

; procent
a = 99% - 22%", "=(a -(%(99) %(22)))"},
a = sin 10%", "=(a sin(%(10)))"},
⋀(a = -10% ^ b", "=(a -(^( %(10) b))))"},)

; lijst
a = []", "=(a [])"},
a = [0]", "=(a [](0))"},
a = [1,2]", "=(a [](1 2))"},
⋀(		{"a = 100 * [a,a]", "=(a *(100 [](a a)))"},)

; set
a = {}
⋀(=(a {}))

a = {1,2}
⋀(=(a {}(1 2)))

a = {b => c}
⋀(=(a {}(=>(b c))))

a = {(b ⇒ c), (d ⇒ e)}
⋀((= a ({} (⇒ b c) (⇒ d e))))

; hist
a = b'
⋀(=(a '(b)))

a = (a' + 1)
⋀(=(a +('(a) 1)))

a = sin 10'
⋀(=(a sin('(10))))


; multi
a = b | c + 2
⋀(=(a |(b +(c 2))))

; tekst
		{"a = \"hoi\"", "=(a [](104 111 105))"},
⋀(		{"\"hoi\" = a", "=([](104 111 105) a)"},)

		// (a b)
a = sin x
⋀(=(a sin(x)))

a : sin x
⋀(:(a sin(x)))

sin x : a
⋀(:(sin(x) a))

a 0 : getal
⋀(:(a(0) getal))

a 0 : getal en a 1 : getal
⋀(en(:(a(0) getal) :(a(1) getal)))

a mod b c
⋀((fout))

f = a b c d
⋀(=(f fout))

a mod (b c)
⋀(mod(a b(c)))


; func
f = [a,b] → [b,a+b]
⋀(=(f →([](a b) [](b +(a b)))))

fib = n → (f^n [1,1]) 0
⋀(=(fib →(n ^((f(n) [](1 1)) 1))))

a^n (1)
⋀((^(a n) 1))


; unicode
a²
⋀(^(a 2))

f = a ∪ b
⋀(=(f ∪(a b)))

a = ★ + ★
⋀(=(a +(★ ★)))

a = ★ · ★
⋀(=(a ·(★ ★)))

a = b² - 3
⋀(=(a -(^(b 2) 3)))

¬ a
⋀(¬(a))

a!
⋀(!(a))

10%
⋀(%(10))

a = ' '
⋀(=(a 32))

a = \"   \""
⋀(=(a [](32 32 32)))

a = Σ b + c
⋀(=(a Σ(+(b c))))

a = ((0,1), 2)
⋀(=(a ,(,(0 1) 2)))

; commentaar
a = 0
;hoi
⋀(=(a 0))

;hoi
a = 0
⋀(=(a 0))

a =;- hoi -; 0
⋀(=(a 0))


; komma's
a = b(2, 3)
⋀(=(a b(2 3)))
