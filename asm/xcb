	.file	"xcb.c"
	.text
	.globl	main
	.type	main, @function
main:
.LFB6:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movl	$0, -4(%rbp)
	movabsq	$6350124331664434504, %rax
	movq	%rax, -68(%rbp)
	movl	$2179651, -60(%rbp)
	leaq	-68(%rbp), %rax
	movq	%rax, %rdi
	call	strlen@PLT
	movb	%al, -5(%rbp)
	movw	$40, -76(%rbp)
	movw	$40, -74(%rbp)
	movw	$20, -72(%rbp)
	movw	$20, -70(%rbp)
	movl	$0, %esi
	movl	$0, %edi
	call	xcb_connect@PLT
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_get_setup@PLT
	movq	%rax, %rdi
	call	xcb_setup_roots_iterator@PLT
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -28(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_generate_id@PLT
	movl	%eax, -32(%rbp)
	movl	$65540, -4(%rbp)
	movq	-24(%rbp), %rax
	movl	12(%rax), %eax
	movl	%eax, -56(%rbp)
	movl	$0, -52(%rbp)
	leaq	-56(%rbp), %rdi
	movl	-4(%rbp), %ecx
	movl	-28(%rbp), %edx
	movl	-32(%rbp), %esi
	movq	-16(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	xcb_create_gc@PLT
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_generate_id@PLT
	movl	%eax, -36(%rbp)
	movl	$65544, -4(%rbp)
	movq	-24(%rbp), %rax
	movl	8(%rax), %eax
	movl	%eax, -56(%rbp)
	movl	$0, -52(%rbp)
	leaq	-56(%rbp), %rdi
	movl	-4(%rbp), %ecx
	movl	-28(%rbp), %edx
	movl	-36(%rbp), %esi
	movq	-16(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	xcb_create_gc@PLT
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_generate_id@PLT
	movl	%eax, -28(%rbp)
	movl	$2050, -4(%rbp)
	movq	-24(%rbp), %rax
	movl	8(%rax), %eax
	movl	%eax, -56(%rbp)
	movl	$32769, -52(%rbp)
	movq	-24(%rbp), %rax
	movl	32(%rax), %esi
	movq	-24(%rbp), %rax
	movl	(%rax), %ecx
	movl	-28(%rbp), %edx
	movq	-16(%rbp), %rax
	subq	$8, %rsp
	leaq	-56(%rbp), %rdi
	pushq	%rdi
	movl	-4(%rbp), %edi
	pushq	%rdi
	pushq	%rsi
	pushq	$1
	pushq	$10
	pushq	$150
	pushq	$150
	movl	$0, %r9d
	movl	$0, %r8d
	movl	$0, %esi
	movq	%rax, %rdi
	call	xcb_create_window@PLT
	addq	$64, %rsp
	movl	-28(%rbp), %edx
	movq	-16(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	xcb_map_window@PLT
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_flush@PLT
	jmp	.L2
.L6:
	movq	-48(%rbp), %rax
	movzbl	(%rax), %eax
	movzbl	%al, %eax
	andb	$127, %al
	cmpl	$2, %eax
	je	.L8
	cmpl	$12, %eax
	jne	.L4
	leaq	-76(%rbp), %rcx
	movl	-32(%rbp), %edx
	movl	-28(%rbp), %esi
	movq	-16(%rbp), %rax
	movq	%rcx, %r8
	movl	$1, %ecx
	movq	%rax, %rdi
	call	xcb_poly_rectangle@PLT
	movzbl	-5(%rbp), %esi
	movl	-36(%rbp), %ecx
	movl	-28(%rbp), %edx
	movq	-16(%rbp), %rax
	subq	$8, %rsp
	leaq	-68(%rbp), %rdi
	pushq	%rdi
	movl	$20, %r9d
	movl	$20, %r8d
	movq	%rax, %rdi
	call	xcb_image_text_8@PLT
	addq	$16, %rsp
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_flush@PLT
	nop
.L4:
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
.L2:
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	xcb_wait_for_event@PLT
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	jne	.L6
	jmp	.L5
.L8:
	nop
.L5:
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	main, .-main
	.ident	"GCC: (Debian 8.3.0-6) 8.3.0"
	.section	.note.GNU-stack,"",@progbits
